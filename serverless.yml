service: serverless-framework

provider:
  name: aws
  runtime: nodejs14.x
  iam:
    role:
      statements:
        - Effect: "Allow"
          Action: "dynamodb:*"
          Resource: "arn:aws:dynamodb:us-east-1:934720402085:table/usersTable"
        - Effect: "Allow"
          Action: "s3:*"
          Resource: "arn:aws:s3:::serverless-framework-bucket-dev/*"
  environment:
    BUCKET: serverless-framework-bucket-dev

plugins:
  - serverless-offline
  - serverless-dynamodb-local

package:
  individually: true
  patterns:
    - "!*/**"
    - "!**"

functions:
  getUser:
    handler: src/functions/getUser/handler.getUser
    events:
      - http:
          path: users/{id}
          method: GET
          request:
            parameters:
              paths:
                id: true
    package:
      patterns:
        - "src/functions/getUser/handler.js"
  getUsers:
    handler: src/functions/getUsers/handler.getUsers
    events:
      - http:
          path: users
          method: GET
    package:
      patterns:
        - "src/functions/getUsers/handler.js"
  createUser:
    handler: src/functions/createUser/handler.createUser
    events:
      - http:
          path: users
          method: POST
          request:
            schemas:
              application/json: ${file(src/schemas/user.schema.json)}
    package:
      patterns:
        - "src/functions/createUser/handler.js"
  updateUser:
    handler: src/functions/updateUser/handler.updateUser
    events:
      - http:
          path: users/{id}
          method: PATCH
          request:
            parameters:
              paths:
                id: true
            schemas:
              application/json: ${file(src/schemas/user.schema.json)}
    package:
      patterns:
        - "src/functions/updateUser/handler.js"
  deleteUser:
    handler: src/functions/deleteUser/handler.deleteUser
    events:
      - http:
          path: users/{id}
          method: DELETE
          request:
            parameters:
              paths:
                id: true
    package:
      patterns:
        - "src/functions/deleteUser/handler.js"
  signedUrl:
    handler: src/functions/signedUrl/handler.signedUrl
    events:
      - http:
          path: signedurl/
          method: GET
          request:
            parameters:
              querystrings:
                filename: true
    package:
      patterns:
        - "src/functions/signedUrl/handler.js"

custom:
  dynamodb:
    stages:
      - dev
    start:
      port: 8000
      inMemory: true
      migrate: true
      seed: true
      # noStart: true     # Uncomment only if you already have a DynamoDB running locally
    seed:
      domain:
        sources:
          - table: usersTable
            sources: [./db/usersTable.json]

resources:
  Resources:
    DynamoDbTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: usersTable
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1

    S3Bucket:
      Type: "AWS::S3::Bucket"
      Properties:
        AccessControl: PublicRead
        BucketName: serverless-framework-bucket-dev

    BucketPolicy:
      Type: AWS::S3::BucketPolicy
      Properties:
        Bucket: !Ref S3Bucket
        PolicyDocument:
          Version: "2012-10-17"
          Statement:
            - Action:
                - "s3:GetObject"
              Effect: Allow
              Resource: !Join
                - ""
                - - "arn:aws:s3:::"
                  - !Ref S3Bucket
                  - /*
              Principal: "*"
